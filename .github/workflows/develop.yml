# This is a basic workflow to help you get started with Actions

name: Test on develop push or pull request

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the develop branch
on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Install_and_test:
    runs-on: ubuntu-latest
    container:
      image: binpar/dockerimages:node12mongo
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Modules
        run: npm install
      - name: Audit
        run: npm audit
      - name: Build
        run: npm run build
      - name: Lint
        run: npm run lint
      - name: Test
        run: mongod & npm run test
        env:
          BUCKET_NAME: ${{secrets.BUCKET_NAME}}
          ACCESS_KEY_ID: ${{secrets.ACCESS_KEY_ID}}
          SECRET_ACCESS_KEY: ${{secrets.SECRET_ACCESS_KEY}}
          ACCOUNT_ID: ${{secrets.ACCOUNT_ID}}
      - name: Sonar Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.organization=binpar
            -Dsonar.projectKey=BinPar_k8s-cluster-backups
            -Dsonar.sources=src/
            -Dsonar.typescript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.coverage.exclusions=node_modules/**/*,src/index.ts,src/tests/*,src/tests/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Test Success
        uses: rjstone/discord-webhook-notify@v1
        if: success()
        with:
            severity: info
            details: Test Succeeded!
            webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
      - name: Test Failure
        uses: rjstone/discord-webhook-notify@v1
        if: failure()
        with:
            severity: error
            details: Test Failed!
            webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
      - name: Test Cancelled
        uses: rjstone/discord-webhook-notify@v1
        if: cancelled()
        with:
            severity: warn
            details: Test Cancelled!
            webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}