name: Publish Docker image
on:
  release:
    types: [published]
jobs:
  push_to_registry:
    name: Build Docker image and push it to the registry
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Login to ECR
        id: ecr
        uses: elgohr/ecr-login-action@master
        with:
          access_key: ${{ secrets.ACCESS_KEY_ID }}
          secret_access_key: ${{ secrets.SECRET_ACCESS_KEY }}
          region: eu-west-1
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: mongo-backups
          username: ${{ steps.ecr.outputs.username }}
          password: ${{ steps.ecr.outputs.password }}
          registry: ${{ steps.ecr.outputs.registry }}
          tags: 'latest,${{ env.RELEASE_VERSION }}'
          dockerfile: Dockerfile
      - name: Release Success
        uses: rjstone/discord-webhook-notify@v1
        if: success()
        with:
            severity: info
            details: Version ${{ env.RELEASE_VERSION }} of ${{ github.event.repository.name }} is published in the Registry!
            webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
      - name: Release Failure
        uses: rjstone/discord-webhook-notify@v1
        if: failure()
        with:
            severity: error
            details: Release Failed!
            webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
      - name: Release Cancelled
        uses: rjstone/discord-webhook-notify@v1
        if: cancelled()
        with:
            severity: warn
            details: Release Cancelled!
            webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}